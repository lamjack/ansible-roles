---
- when: ansible_distribution == "CentOS"
  replace:
    path: "/etc/yum.conf"
    regexp: "^exclude"
    replace: "#exclude"
    backup: yes

- when: ansible_distribution == "CentOS" and check_yum_cache
  command: "yum clean all"
  args:
    warn: no

- when: ansible_distribution == "CentOS" and check_yum_cache
  command: "yum makecache"
  args:
    warn: no

- name: removing the conflicting packages
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"
  yum:
    name: "{{ item }}"
    state: removed
  with_items:
    - "@Basic Web Server"
    - "@MySQL Database server"
    - "@MySQL Database client"
    - "@File and Print Server"

- name: upgrade all packages
  when: ansible_distribution == "CentOS"
  yum:
    name: '*'
    state: latest

- name: install dependent package for CentOS
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - deltarpm
    - gcc
    - gcc-c++
    - make
    - cmake
    - autoconf
    - libjpeg
    - libjpeg-devel
    - libpng
    - libpng-devel
    - freetype
    - freetype-devel
    - libxml2
    - libxml2-devel
    - zlib
    - zlib-devel
    - glibc
    - glibc-devel
    - glib2
    - glib2-devel
    - bzip2
    - bzip2-devel
    - ncurses
    - ncurses-devel
    - libaio
    - numactl-libs
    - readline-devel
    - curl
    - curl-devel
    - e2fsprogs
    - e2fsprogs-devel
    - krb5-devel
    - libidn
    - libidn-devel
    - openssl
    - openssl-devel
    - libxslt-devel
    - libicu-devel
    - libevent-devel
    - libtool
    - libtool-ltdl
    - bison
    - gd-devel
    - vim-enhanced
    - pcre-devel
    - zip
    - unzip
    - ntpdate
    - sqlite-devel
    - sysstat
    - patch
    - bc
    - expect
    - expat-devel
    - rsync
    - rsyslog
    - git
    - lsof
    - lrzsz
    - wget
    - firewalld
    - libselinux-python
    - psmisc

- name: install firewalld
  when: install_firewalld
  yum:
    name: firewalld
    state: present

- when: ansible_distribution == "CentOS"
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - bash
    - openssl
    - glibc

- name: disable SELINUX
  when: ansible_selinux.status != 'disabled'
  selinux:
    state: disabled

- name: custom profile
  when: ansible_distribution == "CentOS"
  template:
    src: "profile.j2"
    dest: "/etc/profile.d/wiz_custom.sh"

- shell: grep ^'PROMPT_COMMAND=' /etc/bashrc | cat
  when: ansible_distribution == "CentOS"
  ignore_errors: yes
  register: prompt_command_exist_result

- when: prompt_command_exist_result.stdout == ""
  lineinfile:
    dest: /etc/bashrc
    line: PROMPT_COMMAND='{ msg=$(history 1 | { read x y; echo $y; });logger "[euid=$(whoami)]":$(who am i):[`pwd`]"$msg"; }'

- name: enable sshd network crond messagebus irqbalance rsyslog services
  when: ansible_distribution == "CentOS"
  service:
    name: "{{ item }}"
    enabled: yes
  ignore_errors: yes
  with_items:
    - network
    - crond
    - messagebus
    - irqbalance
    - rsyslog

- name: set entries in sysctl.conf
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
  with_items: "{{ sysctl_items }}"
  ignore_errors: yes

- name: set entries in sysctl.conf for iptable
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
  with_items: "{{ sysctl_iptables_items }}"
  ignore_errors: yes

- name: set timezone
  timezone:
    name: "{{ timezone }}"

- name: stop and disable ntpd service
  when: ansible_distribution == "CentOS"
  service:
    name: ntpd
    enabled: no
    state: stopped

- command: which ntpdate
  when: ansible_distribution == "CentOS"
  register: which_ntpdate_result

- name: execute ntpdate runs
  command: "{{ which_ntpdate_result.stdout }} {{ ntpdate_server }}"
  ignore_errors: yes

- when: ansible_distribution == "CentOS"
  cron:
    name: ntpdate
    minute: "*/20"
    job: "{{ which_ntpdate_result.stdout }} {{ ntpdate_server }} > /dev/null 2>&1"